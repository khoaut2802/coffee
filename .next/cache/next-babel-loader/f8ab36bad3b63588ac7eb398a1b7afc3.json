{"ast":null,"code":"import moment from \"moment\";\nexport var formatCurrency = function formatCurrency(price) {\n  var locales = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"vi\";\n  var currency = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"VND\";\n  return new Intl.NumberFormat(locales, {\n    style: \"currency\",\n    currency: currency\n  }).format(price);\n};\nexport var renderParam = function renderParam(paramName, paramValue) {\n  if (paramValue && paramValue !== \"\" && paramValue !== null) {\n    return \"&\".concat(paramName, \"=\").concat(paramValue);\n  }\n  return \"\";\n};\nexport var formatDate = function formatDate(date) {\n  var inputFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"YYYY-MM-DD\";\n  var outputFormat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"MMM DD, YYYY\";\n  return moment(date, inputFormat).format(outputFormat);\n};\nexport var removeDash = function removeDash(str) {\n  return str.replace(/-/g, \" \");\n};","map":{"version":3,"names":["moment","formatCurrency","price","locales","arguments","length","undefined","currency","Intl","NumberFormat","style","format","renderParam","paramName","paramValue","concat","formatDate","date","inputFormat","outputFormat","removeDash","str","replace"],"sources":["E:/TAKATECH/organic-coffee/src/common/utils.js"],"sourcesContent":["import moment from \"moment\";\r\n\r\nexport const formatCurrency = (price, locales = \"vi\", currency = \"VND\") => {\r\n  return new Intl.NumberFormat(locales, {\r\n    style: \"currency\",\r\n    currency: currency,\r\n  }).format(price);\r\n};\r\n\r\nexport const renderParam = (paramName, paramValue) => {\r\n  if (paramValue && paramValue !== \"\" && paramValue !== null) {\r\n    return `&${paramName}=${paramValue}`;\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const formatDate = (\r\n  date,\r\n  inputFormat = \"YYYY-MM-DD\",\r\n  outputFormat = \"MMM DD, YYYY\"\r\n) => {\r\n  return moment(date, inputFormat).format(outputFormat);\r\n};\r\n\r\nexport const removeDash = (str) => {\r\n  return str.replace(/-/g, \" \");\r\n};\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,QAAQ;AAE3B,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,KAAK,EAAuC;EAAA,IAArCC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAAA,IAAEG,QAAQ,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EACpE,OAAO,IAAII,IAAI,CAACC,YAAY,CAACN,OAAO,EAAE;IACpCO,KAAK,EAAE,UAAU;IACjBH,QAAQ,EAAEA;EACZ,CAAC,CAAC,CAACI,MAAM,CAACT,KAAK,CAAC;AAClB,CAAC;AAED,OAAO,IAAMU,WAAW,GAAG,SAAdA,WAAWA,CAAIC,SAAS,EAAEC,UAAU,EAAK;EACpD,IAAIA,UAAU,IAAIA,UAAU,KAAK,EAAE,IAAIA,UAAU,KAAK,IAAI,EAAE;IAC1D,WAAAC,MAAA,CAAWF,SAAS,OAAAE,MAAA,CAAID,UAAU;EACpC;EACA,OAAO,EAAE;AACX,CAAC;AAED,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAUA,CACrBC,IAAI,EAGD;EAAA,IAFHC,WAAW,GAAAd,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,YAAY;EAAA,IAC1Be,YAAY,GAAAf,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,cAAc;EAE7B,OAAOJ,MAAM,CAACiB,IAAI,EAAEC,WAAW,CAAC,CAACP,MAAM,CAACQ,YAAY,CAAC;AACvD,CAAC;AAED,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAIC,GAAG,EAAK;EACjC,OAAOA,GAAG,CAACC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;AAC/B,CAAC"},"metadata":{},"sourceType":"module"}